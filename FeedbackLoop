float RealPower_0;       // initial real power 
float RealPower_1;       // final real power
float ApparentPower_0;       // inital apparent power
float ApparentPower_1;       // new apparent power

float ReactivePower_0 = ApparentPower_0 - RealPower_0; // old reactive power
float ReactivePower_1 = ApparentPower_1 - RealPower_1; // new reactive power

float Device_RealPower = RealPower_1 - RealPower_0;             // changes in power = feedback loop error
float Device_ReactivePower = ReactivePower_1 - ReactivePower_0;

//Resistive Devices
if ( (Device_RealPower > 2) && (Device_ReactivePower < 1) )  //threshold values may need adjustment
{
    if ( (Device_RealPower > 29) && (Device_RealPower < 31) )
    {
      //action/statement to show soldering iron is on
    }
    else if ( (Device_RealPower > X) && (Device_RealPower < Y) ) // Change X and Y
    {
      
    }
    else if ( (Device_RealPower > X) && (Device_RealPower < Y) ) // Change X and Y
    {
      
    }
}

 //Inductive Devices
else if(Device_ReactivePower > 2)
{
    if( (Device_ReactivePower > X) && (Device_ReactivePower < Y)  && (Device_RealPower > X) && (Device_RealPower < Y) )
    {
        
    }
    if( (Device_ReactivePower > X) && (Device_ReactivePower < Y)  && (Device_RealPower > X) && (Device_RealPower < Y) )
    {
        
    }
    if( (Device_ReactivePower > X) && (Device_ReactivePower < Y)  && (Device_RealPower > X) && (Device_RealPower < Y) )
    {
        
    }
}

else
{
    // Keep old power(need to update the previous cases, replace old power stuff with the current ones), new power info is updated right before calculations are done      
    // add some delay to wait for transient to pass and settle down before reading another value
}
    
  
}
