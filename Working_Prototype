/*************************
 Project 183 Electronic Power Monitor
 EE4349 Senior Design
 Nicholas Vu
 Cirilo Cardenas
 Emilio Carmago
 ***************************/


#include <Wire.h>
#include <LCD.h>
#include <LiquidCrystal_I2C.h>
#include <SD.h>
#include <SPI.h>
#include <EmonLib.h>


#define I2C_ADDR    0x27  // Define I2C Address where the PCF8574A is
#define BACKLIGHT_PIN     3
#define En_pin  2
#define Rw_pin  1
#define Rs_pin  0
#define D4_pin  4
#define D5_pin  5
#define D6_pin  6
#define D7_pin  7

int n;
int g;
float error;
float y;
File myFile;

EnergyMonitor emon1;             // Create an instance

LiquidCrystal_I2C  lcd(I2C_ADDR,En_pin,Rw_pin,Rs_pin,D4_pin,D5_pin,D6_pin,D7_pin);

void setup()
{
  /**Energy Monitor Sample Code**/
  Serial.begin(9600);

//  emon1.voltage(2, 66, 5.02);  // Voltage: input pin, calibration, phase_shift
//  emon1.current(1, 9);       // Current: input pin, calibration.

//  emon1.voltage(2, 89, 4.8);  // Voltage: input pin, calibration, phase_shift
//  emon1.current(1, 8.9);       // Current: input pin, calibration.

emon1.voltage(2, 218, 0.7);  // Voltage: input pin, calibration, phase_shift
emon1.current(1, 8.9);       // Current: input pin, calibration.

 
  /*****LCD Setup*****/
 
  lcd.begin (20,4);
  lcd.setBacklightPin(BACKLIGHT_PIN,POSITIVE);
  lcd.setBacklight(HIGH);
  lcd.setCursor(4,0);                   
  lcd.print("Project 183");
  lcd.setCursor(0,1);
  lcd.print("UTA EE 2017 Nick Vu");
  lcd.setCursor(0,2);
  lcd.print("Cirilo Cardenas");
  lcd.setCursor(1,3);
  lcd.print("Emilio Carmago");
  delay(1300);
  lcd.clear();

  /*****SD Card Setup*****/
  
  // Open serial communications and wait for port to open
      Serial.begin(9600);
     
      while (!Serial)
      {
        ; // wait for serial port to connect. Needed for native USB port only
      }
    
    
      Serial.print("Initializing SD card...");
    
      if (!SD.begin(4))
      {
        Serial.println("initialization failed!");
        return;
      }
      Serial.println("initialization done.");
    
      // open the file. note that only one file can be open at a time,
      // so you have to close this one before opening another.
      myFile = SD.open("test.txt", FILE_WRITE);

 
}

void loop()
{
 noInterrupts();
  /*****Energy Monitor Sample Code*****/
   emon1.calcVI(20,2000);         // Calculate all. No.of half wavelengths (crossings), time-out
   emon1.serialprint();           // Print out all variables (realpower, apparent power, Vrms, Irms, power factor)
 
  float realPower       = emon1.realPower;        //extract Real Power into variable
  float apparentPower   = emon1.apparentPower;    //extract Apparent Power into variable
  float powerFactor     = emon1.powerFactor;      //extract Power Factor into Variable
  float supplyVoltage   = emon1.Vrms;             //extract Vrms into Variable
  float Irms            = emon1.Irms;             //extract Irms into Variable

interrupts();
  /*****SD Card Setup*****/
if (n = 20)
  {
      // if the file opened okay, write to it:
      if (myFile)
      {
        Serial.print("Writing to test.txt...");
        
        myFile.println(apparentPower);
        myFile.print("Apparent");
        myFile.println(Irms);
        myFile.print("Irms");
        myFile.println(supplyVoltage);
        myFile.print("Vrms");
        
        myFile.println(powerFactor);
        myFile.print("Power Fact");
        myFile.println(realPower);
        myFile.print("Real Power");
        
        lcd.clear();
        lcd.home();
        lcd.print("SD Card written");
        lcd.setCursor(0,1);
        lcd.print("to successfully");
        delay(1500);
        lcd.clear();
        // close the file:
        myFile.close();
        Serial.println("done.");
      }
      else
      {
        // if the file didn't open, print an error:
        Serial.println("error opening test.txt");
      }
    
      // re-open the file for reading:
      myFile = SD.open("test.txt");
      if (myFile)
      {
        Serial.println("test.txt:");
    
        // read from the file until there's nothing else in it:
        while (myFile.available())
        {
          Serial.write(myFile.read());
        }
        // close the file:
        myFile.close();
      }
      else
      {
        // if the file didn't open, print an error:
        Serial.println("error opening test.txt");
      }
  }

  if (n = 21)
  {
    n = 0;
  }



 //interrupts();

  lcd.clear();
  lcd.home ();
  lcd.print(apparentPower);
  lcd.print(" Apparent");
  lcd.setCursor(0,1);
  lcd.print(Irms);
  lcd.print(" Irms ");
  lcd.print(supplyVoltage);
  lcd.print(" Vrms");
  lcd.setCursor(0,2);
  lcd.print(powerFactor);
  lcd.print("  Power Fact");
  lcd.setCursor(0,3);
  lcd.print(realPower);
  lcd.print(" Real Power");
//
//  lcd.setCursor(2,2);
//  lcd.print(Vrms*120.0);
//  lcd.print(" Apparent");
//  lcd.setCursor(3,3);
//  lcd.print(Vrms);
//  lcd.print(" Vrms");


//  lcd.home ();
//  lcd.print(m++,DEC);
//  lcd.print(" Watts");
//  lcd.setCursor (0,1);         
//  lcd.print(n++,DEC);
  delay(200);
  


  

 
}
